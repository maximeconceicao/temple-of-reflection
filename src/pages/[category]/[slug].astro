---
import type { APIContext } from "astro";
import { getCollection } from "astro:content";
import { allCategories, categoryMeta, GardenCategory } from "@/lib/categories";
import Layout from "@/layouts/Layout.astro";
import BreadcrumbNav from "@/components/BreadcrumbNav.astro";

export async function getStaticPaths() {
  const allPaths = await Promise.all(
    allCategories.map(async (category) => {
      const entries = await getCollection(category);
      return entries.map((entry) => ({
        params: {
          category,
          slug: entry.slug,
        },
      }));
    })
  );

  return allPaths.flat();
}

const { category, slug } = Astro.params;

if (!category || !slug || !allCategories.includes(category as any)) {
  return new Response("Paramètres invalides", { status: 404 });
}

const entries = await getCollection(category as GardenCategory);

const entry = entries.find((entry) => entry.slug === slug);

if (!entry) {
  return new Response("Contenu non trouvé", { status: 404 });
}
---

<Layout title={"test"}>
  <article class="prose lg:prose-xl mx-auto">
    <section class="flex flex-row items-center gap-4">
      <h2 class="text-4xl">{entry.data.title}</h2>
    </section>
    <section class="mt-4 mb-8">
      <BreadcrumbNav
        items={[
          { label: "Home", href: "/" },
          { label: categoryMeta[category].label, href: `/${category}` },
          { label: entry.data.title, href: `/${category}/${slug}` },
        ]}
      />
    </section>
    <div class="hero-image mt-7">
      {
        entry.data.heroImage && (
          <img
            width="100%"
            height={510}
            src={entry.data.heroImage}
            alt=""
            class="w-full h-auto rounded-md my-7"
          />
        )
      }
    </div>
    <p class="text-sm text-gray-500">
      <!-- {entry.data.type} — {entry.data.category} -->
    </p>
    <!-- <Markdown content={entry.body} /> -->
  </article>
</Layout>
