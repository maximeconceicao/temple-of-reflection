---
import type { APIContext } from "astro";
import { getCollection } from "astro:content";
import { Markdown } from "astro/components";

export async function getStaticPaths() {
  const allEntries = await getCollection("garden");

  return allEntries.map((entry) => ({
    params: {
      theme: entry.data.theme,
      slug: entry.slug,
    },
  }));
}

export async function get({ params }: APIContext) {
  const allEntries = await getCollection("garden");

  const matchedEntry = allEntries.find(
    (entry) => entry.data.theme === params.theme && entry.slug === params.slug
  );

  if (!matchedEntry) {
    return new Response("Contenu non trouvé", { status: 404 });
  }

  return {
    props: {
      entry: matchedEntry,
    },
  };
}

const { entry } = Astro.props;
---

<article class="prose lg:prose-xl mx-auto">
  <h1>{entry.data.title}</h1>
  <p class="text-sm text-gray-500">{entry.data.type} — {entry.data.theme}</p>
  <Markdown content={entry.body} />
</article>
