---
import { categoryMeta, GardenCategory } from "@/lib/categories";
import EntryTypeBadge from "./EntryTypeBadge.astro";
import EntryDate from "./EntryDate.astro";
import type { GardenEntry } from "@/lib/types";

interface Props {
  category: GardenCategory;
  entries: GardenEntry[];
}

const { category, entries } = Astro.props as Props;

const entriesSorted = entries.sort((a, b) => {
  const dateA = new Date(a.data.pubDate);
  const dateB = new Date(b.data.pubDate);
  return dateB.getTime() - dateA.getTime();
});
---

<section class="grid grid-cols-1">
  <div
    class="hidden sm:grid grid-cols-[1fr_4fr_1fr] text-sm text-left border-b pb-1"
  >
    <span>/DATE</span>
    <span>/TITRE</span>
    <span>/TYPE</span>
  </div>

  {
    entriesSorted.map((entry) => {
      const date = new Date(entry.data.pubDate);
      const formattedDate = `${date.getFullYear()}.${String(date.getMonth() + 1).padStart(2, "0")}.${String(date.getDate()).padStart(2, "0")}`;
      return (
        <div class="hidden sm:grid sm:grid-cols-[1fr_4fr_1fr] py-2 border-b gap-1 sm:gap-0">
          <EntryDate formattedDate={formattedDate} />
          <a
            href={`/${category}/${entry.slug}`}
            class="hover:underline text-lg"
            style={{ color: `var(--${categoryMeta[category].color})` }}
          >
            {entry.data.title}
          </a>
          <EntryTypeBadge type={entry.data.type} />
        </div>
        <div class="flex flex-col sm:hidden py-2 border-b gap-1 sm:gap-0">
          <EntryDate formattedDate={formattedDate} />
          <div class="flex flex-row justify-between">
          <a
            href={`/${category}/${entry.slug}`}
            class="hover:underline text-lg"
            style={{ color: `var(--${categoryMeta[category].color})` }}
          >
            {entry.data.title}
          </a>
          <EntryTypeBadge type={entry.data.type} />
          </div>
        </div>
      );
    })
  }
</section>
